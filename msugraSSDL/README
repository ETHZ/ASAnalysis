This file is meant to be an instruction to use the Higgs tool for the SSDL analysis.
As for now, the SSDL exclusions are made as simple counting experiments,
and no fancy bin-wise limit-setting, although it can be expanded rather easily.

Here are the steps you have to take:

=======================================
(0) inform yourself here: https://twiki.cern.ch/twiki/bin/view/CMS/SWGuideHiggsAnalysisCombinedLimit
	information on datacards, the Higgs tool and running with crabjobs can be found there
	if you're lazy: you have to get the higgs combination tool from cvs by either issuing
	this in a cmsenv area:
		-----------------------------------
		cmsrel CMSSW_4_2_8
		cd CMSSW_4_2_8/src 
		cmsenv
		cvs co  HiggsAnalysis/CombinedLimit
		scramv1 b
		-----------------------------------
	or you can get a standalone version (but I haven't tested this):
		-----------------------------------
		cvs co -d ./ HiggsAnalysis/CombinedLimit
		cd CombinedLimit
		make
		export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:`pwd`/lib
		-----------------------------------

=======================================
(1) process the msugra scan (or any other model)

=======================================
(2) let the SSDLPlotter run over the minitrees of step (1), make sure you give the correct input file
	also make sure that the following files exist in this directory:
		- nlo_kfactors.txt	# should contain all the process dependant k-factors
		- xsec_lo.txt		# contains the LO cross sections in each point
		- xsec_nlo.txt		# contains the NLO cross sections in each point for each process!
	output of the plotter will be a file with all the information you will need, it's called results_HT*_MET*.root or so

=======================================
(3) prepare your datacard for the Higgs combination tool, see the above twiki or adapt the dummy datacard

=======================================
(4) invoke the script makeGridUsingCrab.py in a way as follows:
	./makeGridUsingCrab.py card.txt <min> <max> -n <n_points> -T <n_toys> -i <iterations> -o <name>
		<min> should be a point below your -1 sigma expected limit (obtain an estimate on this by calling the asymptotic combination)
		<max> should be a point above your +1 sigma expected limit
		<n_point> number of points to be calculated in between <min> and <max>, division is done linearly
		<n_toys> number of toys the tool throws for each calculation (default is 500)
		<iterations> number of iterations, the default is 20, but take any value you like
		<name> any name, doesn't really matter
	this will create three files, <name>.cfg and <name>.sh and <name>.workspace.root, it will also create a softlink to the `combine` executable
	you'll have to find your own working point for <min>, <max>, <n_points> and <n_toys> and <iterations>, note that increasing any of them will increase computing time
	this can lead to significant times.

=======================================
(5) submit the .cfg file to crab with:
		crab -create -submit -cfg <name>.cfg

=======================================
(6) once you retrieve the crab output (have a look into /shome/mdunser/scripts/get_them_all.py), merge the files and run the following commands for the limits:
		combine mydatcard.txt -M HybridNew --freq --grid=<merged_file>.root # for observed limit
		combine mydatcard.txt -M HybridNew --freq --grid=<merged_file>.root --expectedFromGrid 0.5 # for expected limit
	to calculate a symmetric 95% interval, run the latter command with 0.025 and 0.975.

=======================================
## the following only works for msugra scans, there is no point in doing this for SMS scans (yet)
(7) take these numbers as input for the plot.c script. exchange the according lines and then do:
		root
		.x plot.c

this should do it.
